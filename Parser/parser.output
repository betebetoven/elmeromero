Terminals unused in grammar

    DIM
    AS
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '.'


State 53 conflicts: 2 shift/reduce
State 67 conflicts: 1 shift/reduce
State 84 conflicts: 2 shift/reduce
State 88 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa
   14          | declaracion_void
   15          | llamada
   16          | declaracion_vector

   17 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   18 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   19 ins_if: IF '(' x ')' '{' lSentencia '}'
   20       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   21       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   22 escapa: BREAK
   23       | CONTINUE
   24       | RETORNO

   25 llamada: ID '(' lparam ')'
   26        | ID '(' ')'

   27 aumento: INCREMENT ID
   28        | ID INCREMENT

   29 decremento: DECREMENT ID
   30           | ID DECREMENT

   31 imprimir: IMPR '(' lista_Expr ')'

   32 lista_Expr: lista_Expr ',' x
   33           | x

   34 bloque: '{' lSentencia '}'

   35 z: ';'
   36  | %empty

   37 declaracion_void: tipo ID '(' ')' bloque
   38                 | tipo ID '(' lasig ')' bloque

   39 lasig: lasig ',' declaracion_var
   40      | declaracion_var

   41 lparam: lparam ',' x
   42       | x

   43 declaracion_var: tipo ID
   44                | tipo ID '=' x

   45 declaracion_vector: VECTOR MENOR tipo MAYOR ID
   46                   | VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']'

   47 asignacion_var: ID '=' x

   48 x: cond

   49 cond: cond OR cond
   50     | cond AND cond
   51     | NOT cond
   52     | '(' cond ')'
   53     | expr oprel expr
   54     | expr

   55 oprel: MAYOR
   56      | MENOR
   57      | IGUAL_IGUAL
   58      | MENOR_IGUAL
   59      | MAYOR_IGUAL
   60      | DIFERENTE

   61 expr: expr SUMA expr
   62     | expr MENOS expr
   63     | expr MULTIPLICACION expr
   64     | expr DIVISION expr
   65     | expr MOD expr
   66     | expr EXPONENCIAL expr
   67     | '(' expr ')'
   68     | INCREMENT ID
   69     | ID INCREMENT
   70     | DECREMENT ID
   71     | ID DECREMENT
   72     | MENOS expr
   73     | NUMERO
   74     | ID
   75     | STRING
   76     | FLOAT
   77     | TRUE
   78     | FALSE

   79 tipo: INT
   80     | STR
   81     | FLO
   82     | BOOL
   83     | VOID


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 17 18 19 20 21 25 26 31 37 38 52 67
    ')' (41) 17 18 19 20 21 25 26 31 37 38 52 67
    ',' (44) 32 39 41
    '.' (46)
    ';' (59) 35
    '=' (61) 44 46 47
    '[' (91) 46
    ']' (93) 46
    '{' (123) 17 18 19 20 21 34
    '}' (125) 17 18 19 20 21 34
    error (256)
    NUMERO <std::string> (258) 73
    ID <std::string> (259) 25 26 27 28 29 30 37 38 43 44 45 46 47 68 69 70 71 74
    STRING <std::string> (260) 75
    INT <std::string> (261) 79
    STR <std::string> (262) 80
    FLOAT <std::string> (263) 76
    FLO <std::string> (264) 81
    BOOL <std::string> (265) 82
    SUMA (266) 61
    MENOS (267) 62 72
    DIM (268)
    AS (269)
    IMPR (270) 31
    MOD (271) 65
    VOID (272) 83
    TRUE (273) 77
    FALSE (274) 78
    AND (275) 50
    NOT (276) 51
    IF (277) 19 20 21
    THEN (278)
    ELSE (279) 20 21
    WHILE (280) 18
    PRINT (281)
    PRINTF (282)
    FOR (283) 17
    MULTIPLICACION (284) 63
    DIVISION (285) 64
    EXPONENCIAL (286) 66
    MENOR_IGUAL (287) 58
    MAYOR_IGUAL (288) 59
    IGUAL_IGUAL (289) 57
    DIFERENTE (290) 60
    MENOR (291) 45 46 56
    MAYOR (292) 45 46 55
    OR (293) 49
    INTERROGACION (294)
    INCREMENT (295) 27 28 68 69
    DECREMENT (296) 29 30 70 71
    DOT (297)
    LEFT_BRACKET (298)
    RIGHT_BRACKET (299)
    VECTOR (300) 45 46
    PUSH_FRONT (301)
    DOT_PUSH_BACK (302)
    STRUCT (303)
    REMOVE (304)
    MEDIAN (305)
    IOTA (306)
    MEAN (307)
    SIZE (308)
    ATOI (309)
    GET (310)
    RETORNO (311) 24
    BREAK (312) 22
    CONTINUE (313) 23
    NEG (314)


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    s <QVector<AbstractExpr*>*> (71)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (72)
        on left: 2 3
        on right: 1 2 17 18 19 20 21 34
    sentencia <AbstractExpr*> (73)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 3
    ciclo_for <AbstractExpr*> (74)
        on left: 17
        on right: 10
    ciclo_while <AbstractExpr*> (75)
        on left: 18
        on right: 11
    ins_if <AbstractExpr*> (76)
        on left: 19 20 21
        on right: 12 21
    escapa <AbstractExpr*> (77)
        on left: 22 23 24
        on right: 13
    llamada <AbstractExpr*> (78)
        on left: 25 26
        on right: 15
    aumento <AbstractExpr*> (79)
        on left: 27 28
        on right: 8 17
    decremento <AbstractExpr*> (80)
        on left: 29 30
        on right: 9
    imprimir <NT_Imprimir*> (81)
        on left: 31
        on right: 6
    lista_Expr <AbstractExpr*> (82)
        on left: 32 33
        on right: 31 32
    bloque <AbstractExpr*> (83)
        on left: 34
        on right: 7 37 38
    z (84)
        on left: 35 36
        on right: 2 3 17
    declaracion_void <AbstractExpr*> (85)
        on left: 37 38
        on right: 14
    lasig <QVector<AbstractExpr*>*> (86)
        on left: 39 40
        on right: 38 39
    lparam <QVector<AbstractExpr*>*> (87)
        on left: 41 42
        on right: 25 41 46
    declaracion_var <AbstractExpr*> (88)
        on left: 43 44
        on right: 4 17 39 40
    declaracion_vector <AbstractExpr*> (89)
        on left: 45 46
        on right: 16
    asignacion_var <AbstractExpr*> (90)
        on left: 47
        on right: 5
    x <AbstractExpr*> (91)
        on left: 48
        on right: 17 18 19 20 21 32 33 41 42 44 47
    cond <AbstractExpr*> (92)
        on left: 49 50 51 52 53 54
        on right: 48 49 50 51 52
    oprel <std::string> (93)
        on left: 55 56 57 58 59 60
        on right: 53
    expr <AbstractExpr*> (94)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 53 54 61 62 63 64 65 66 67 72
    tipo <AbstractExpr*> (95)
        on left: 79 80 81 82 83
        on right: 37 38 43 44 45 46


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    s                   go to state 18
    lSentencia          go to state 19
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 1

   25 llamada: ID . '(' lparam ')'
   26        | ID . '(' ')'
   28 aumento: ID . INCREMENT
   30 decremento: ID . DECREMENT
   47 asignacion_var: ID . '=' x

    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37
    '='        shift, and go to state 38


State 2

   79 tipo: INT .

    $default  reduce using rule 79 (tipo)


State 3

   80 tipo: STR .

    $default  reduce using rule 80 (tipo)


State 4

   81 tipo: FLO .

    $default  reduce using rule 81 (tipo)


State 5

   82 tipo: BOOL .

    $default  reduce using rule 82 (tipo)


State 6

   31 imprimir: IMPR . '(' lista_Expr ')'

    '('  shift, and go to state 39


State 7

   83 tipo: VOID .

    $default  reduce using rule 83 (tipo)


State 8

   19 ins_if: IF . '(' x ')' '{' lSentencia '}'
   20       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   21       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 40


State 9

   18 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 41


State 10

   17 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 42


State 11

   27 aumento: INCREMENT . ID

    ID  shift, and go to state 43


State 12

   29 decremento: DECREMENT . ID

    ID  shift, and go to state 44


State 13

   45 declaracion_vector: VECTOR . MENOR tipo MAYOR ID
   46                   | VECTOR . MENOR tipo MAYOR ID '=' '[' lparam ']'

    MENOR  shift, and go to state 45


State 14

   24 escapa: RETORNO .

    $default  reduce using rule 24 (escapa)


State 15

   22 escapa: BREAK .

    $default  reduce using rule 22 (escapa)


State 16

   23 escapa: CONTINUE .

    $default  reduce using rule 23 (escapa)


State 17

   34 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 46
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 18

    0 $accept: s . END

    END  shift, and go to state 47


State 19

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    $default  reduce using rule 1 (s)

    sentencia           go to state 48
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 20

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 49

    $default  reduce using rule 36 (z)

    z  go to state 50


State 21

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 22

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 23

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 24

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 25

   15 sentencia: llamada .

    $default  reduce using rule 15 (sentencia)


State 26

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 27

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 28

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 29

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 30

   14 sentencia: declaracion_void .

    $default  reduce using rule 14 (sentencia)


State 31

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 32

   16 sentencia: declaracion_vector .

    $default  reduce using rule 16 (sentencia)


State 33

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 34

   37 declaracion_void: tipo . ID '(' ')' bloque
   38                 | tipo . ID '(' lasig ')' bloque
   43 declaracion_var: tipo . ID
   44                | tipo . ID '=' x

    ID  shift, and go to state 51


State 35

   28 aumento: ID INCREMENT .

    $default  reduce using rule 28 (aumento)


State 36

   30 decremento: ID DECREMENT .

    $default  reduce using rule 30 (decremento)


State 37

   25 llamada: ID '(' . lparam ')'
   26        | ID '(' . ')'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62
    ')'        shift, and go to state 63

    lparam  go to state 64
    x       go to state 65
    cond    go to state 66
    expr    go to state 67


State 38

   47 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 68
    cond  go to state 66
    expr  go to state 67


State 39

   31 imprimir: IMPR '(' . lista_Expr ')'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    lista_Expr  go to state 69
    x           go to state 70
    cond        go to state 66
    expr        go to state 67


State 40

   19 ins_if: IF '(' . x ')' '{' lSentencia '}'
   20       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   21       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 71
    cond  go to state 66
    expr  go to state 67


State 41

   18 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 72
    cond  go to state 66
    expr  go to state 67


State 42

   17 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 73
    tipo             go to state 74


State 43

   27 aumento: INCREMENT ID .

    $default  reduce using rule 27 (aumento)


State 44

   29 decremento: DECREMENT ID .

    $default  reduce using rule 29 (decremento)


State 45

   45 declaracion_vector: VECTOR MENOR . tipo MAYOR ID
   46                   | VECTOR MENOR . tipo MAYOR ID '=' '[' lparam ']'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    tipo  go to state 75


State 46

    2 lSentencia: lSentencia . sentencia z
   34 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 76

    sentencia           go to state 48
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 47

    0 $accept: s END .

    $default  accept


State 48

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 49

    $default  reduce using rule 36 (z)

    z  go to state 77


State 49

   35 z: ';' .

    $default  reduce using rule 35 (z)


State 50

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 51

   37 declaracion_void: tipo ID . '(' ')' bloque
   38                 | tipo ID . '(' lasig ')' bloque
   43 declaracion_var: tipo ID .
   44                | tipo ID . '=' x

    '('  shift, and go to state 78
    '='  shift, and go to state 79

    $default  reduce using rule 43 (declaracion_var)


State 52

   73 expr: NUMERO .

    $default  reduce using rule 73 (expr)


State 53

   69 expr: ID . INCREMENT
   71     | ID . DECREMENT
   74     | ID .

    INCREMENT  shift, and go to state 80
    DECREMENT  shift, and go to state 81

    INCREMENT  [reduce using rule 74 (expr)]
    DECREMENT  [reduce using rule 74 (expr)]
    $default   reduce using rule 74 (expr)


State 54

   75 expr: STRING .

    $default  reduce using rule 75 (expr)


State 55

   76 expr: FLOAT .

    $default  reduce using rule 76 (expr)


State 56

   72 expr: MENOS . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 83


State 57

   77 expr: TRUE .

    $default  reduce using rule 77 (expr)


State 58

   78 expr: FALSE .

    $default  reduce using rule 78 (expr)


State 59

   51 cond: NOT . cond

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    cond  go to state 84
    expr  go to state 67


State 60

   68 expr: INCREMENT . ID

    ID  shift, and go to state 85


State 61

   70 expr: DECREMENT . ID

    ID  shift, and go to state 86


State 62

   52 cond: '(' . cond ')'
   67 expr: '(' . expr ')'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    cond  go to state 87
    expr  go to state 88


State 63

   26 llamada: ID '(' ')' .

    $default  reduce using rule 26 (llamada)


State 64

   25 llamada: ID '(' lparam . ')'
   41 lparam: lparam . ',' x

    ')'  shift, and go to state 89
    ','  shift, and go to state 90


State 65

   42 lparam: x .

    $default  reduce using rule 42 (lparam)


State 66

   48 x: cond .
   49 cond: cond . OR cond
   50     | cond . AND cond

    AND  shift, and go to state 91
    OR   shift, and go to state 92

    $default  reduce using rule 48 (x)


State 67

   53 cond: expr . oprel expr
   54     | expr .
   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98
    MENOR_IGUAL     shift, and go to state 99
    MAYOR_IGUAL     shift, and go to state 100
    IGUAL_IGUAL     shift, and go to state 101
    DIFERENTE       shift, and go to state 102
    MENOR           shift, and go to state 103
    MAYOR           shift, and go to state 104

    MENOS     [reduce using rule 54 (cond)]
    $default  reduce using rule 54 (cond)

    oprel  go to state 105


State 68

   47 asignacion_var: ID '=' x .

    $default  reduce using rule 47 (asignacion_var)


State 69

   31 imprimir: IMPR '(' lista_Expr . ')'
   32 lista_Expr: lista_Expr . ',' x

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 70

   33 lista_Expr: x .

    $default  reduce using rule 33 (lista_Expr)


State 71

   19 ins_if: IF '(' x . ')' '{' lSentencia '}'
   20       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   21       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 108


State 72

   18 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 109


State 73

   17 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 49

    $default  reduce using rule 36 (z)

    z  go to state 110


State 74

   43 declaracion_var: tipo . ID
   44                | tipo . ID '=' x

    ID  shift, and go to state 111


State 75

   45 declaracion_vector: VECTOR MENOR tipo . MAYOR ID
   46                   | VECTOR MENOR tipo . MAYOR ID '=' '[' lparam ']'

    MAYOR  shift, and go to state 112


State 76

   34 bloque: '{' lSentencia '}' .

    $default  reduce using rule 34 (bloque)


State 77

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 78

   37 declaracion_void: tipo ID '(' . ')' bloque
   38                 | tipo ID '(' . lasig ')' bloque

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7
    ')'   shift, and go to state 113

    lasig            go to state 114
    declaracion_var  go to state 115
    tipo             go to state 74


State 79

   44 declaracion_var: tipo ID '=' . x

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 116
    cond  go to state 66
    expr  go to state 67


State 80

   69 expr: ID INCREMENT .

    $default  reduce using rule 69 (expr)


State 81

   71 expr: ID DECREMENT .

    $default  reduce using rule 71 (expr)


State 82

   67 expr: '(' . expr ')'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 117


State 83

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   72     | MENOS expr .

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 72 (expr)


State 84

   49 cond: cond . OR cond
   50     | cond . AND cond
   51     | NOT cond .

    AND  shift, and go to state 91
    OR   shift, and go to state 92

    AND       [reduce using rule 51 (cond)]
    OR        [reduce using rule 51 (cond)]
    $default  reduce using rule 51 (cond)


State 85

   68 expr: INCREMENT ID .

    $default  reduce using rule 68 (expr)


State 86

   70 expr: DECREMENT ID .

    $default  reduce using rule 70 (expr)


State 87

   49 cond: cond . OR cond
   50     | cond . AND cond
   52     | '(' cond . ')'

    AND  shift, and go to state 91
    OR   shift, and go to state 92
    ')'  shift, and go to state 118


State 88

   53 cond: expr . oprel expr
   54     | expr .
   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   67     | '(' expr . ')'

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98
    MENOR_IGUAL     shift, and go to state 99
    MAYOR_IGUAL     shift, and go to state 100
    IGUAL_IGUAL     shift, and go to state 101
    DIFERENTE       shift, and go to state 102
    MENOR           shift, and go to state 103
    MAYOR           shift, and go to state 104
    ')'             shift, and go to state 119

    ')'       [reduce using rule 54 (cond)]
    $default  reduce using rule 54 (cond)

    oprel  go to state 105


State 89

   25 llamada: ID '(' lparam ')' .

    $default  reduce using rule 25 (llamada)


State 90

   41 lparam: lparam ',' . x

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 120
    cond  go to state 66
    expr  go to state 67


State 91

   50 cond: cond AND . cond

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    cond  go to state 121
    expr  go to state 67


State 92

   49 cond: cond OR . cond

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    cond  go to state 122
    expr  go to state 67


State 93

   61 expr: expr SUMA . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 123


State 94

   62 expr: expr MENOS . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 124


State 95

   65 expr: expr MOD . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 125


State 96

   63 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 126


State 97

   64 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 127


State 98

   66 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 128


State 99

   58 oprel: MENOR_IGUAL .

    $default  reduce using rule 58 (oprel)


State 100

   59 oprel: MAYOR_IGUAL .

    $default  reduce using rule 59 (oprel)


State 101

   57 oprel: IGUAL_IGUAL .

    $default  reduce using rule 57 (oprel)


State 102

   60 oprel: DIFERENTE .

    $default  reduce using rule 60 (oprel)


State 103

   56 oprel: MENOR .

    $default  reduce using rule 56 (oprel)


State 104

   55 oprel: MAYOR .

    $default  reduce using rule 55 (oprel)


State 105

   53 cond: expr oprel . expr

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 82

    expr  go to state 129


State 106

   31 imprimir: IMPR '(' lista_Expr ')' .

    $default  reduce using rule 31 (imprimir)


State 107

   32 lista_Expr: lista_Expr ',' . x

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 130
    cond  go to state 66
    expr  go to state 67


State 108

   19 ins_if: IF '(' x ')' . '{' lSentencia '}'
   20       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   21       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 131


State 109

   18 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 132


State 110

   17 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    x     go to state 133
    cond  go to state 66
    expr  go to state 67


State 111

   43 declaracion_var: tipo ID .
   44                | tipo ID . '=' x

    '='  shift, and go to state 79

    $default  reduce using rule 43 (declaracion_var)


State 112

   45 declaracion_vector: VECTOR MENOR tipo MAYOR . ID
   46                   | VECTOR MENOR tipo MAYOR . ID '=' '[' lparam ']'

    ID  shift, and go to state 134


State 113

   37 declaracion_void: tipo ID '(' ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 135


State 114

   38 declaracion_void: tipo ID '(' lasig . ')' bloque
   39 lasig: lasig . ',' declaracion_var

    ')'  shift, and go to state 136
    ','  shift, and go to state 137


State 115

   40 lasig: declaracion_var .

    $default  reduce using rule 40 (lasig)


State 116

   44 declaracion_var: tipo ID '=' x .

    $default  reduce using rule 44 (declaracion_var)


State 117

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   67     | '(' expr . ')'

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98
    ')'             shift, and go to state 119


State 118

   52 cond: '(' cond ')' .

    $default  reduce using rule 52 (cond)


State 119

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 120

   41 lparam: lparam ',' x .

    $default  reduce using rule 41 (lparam)


State 121

   49 cond: cond . OR cond
   50     | cond . AND cond
   50     | cond AND cond .

    $default  reduce using rule 50 (cond)


State 122

   49 cond: cond . OR cond
   49     | cond OR cond .
   50     | cond . AND cond

    AND  shift, and go to state 91

    $default  reduce using rule 49 (cond)


State 123

   61 expr: expr . SUMA expr
   61     | expr SUMA expr .
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98

    $default  reduce using rule 61 (expr)


State 124

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   62     | expr MENOS expr .
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98

    $default  reduce using rule 62 (expr)


State 125

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   65     | expr MOD expr .
   66     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 65 (expr)


State 126

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   63     | expr MULTIPLICACION expr .
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 63 (expr)


State 127

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   64     | expr DIVISION expr .
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 64 (expr)


State 128

   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr
   66     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 98

    $default  reduce using rule 66 (expr)


State 129

   53 cond: expr oprel expr .
   61 expr: expr . SUMA expr
   62     | expr . MENOS expr
   63     | expr . MULTIPLICACION expr
   64     | expr . DIVISION expr
   65     | expr . MOD expr
   66     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 93
    MENOS           shift, and go to state 94
    MOD             shift, and go to state 95
    MULTIPLICACION  shift, and go to state 96
    DIVISION        shift, and go to state 97
    EXPONENCIAL     shift, and go to state 98

    MENOS     [reduce using rule 53 (cond)]
    $default  reduce using rule 53 (cond)


State 130

   32 lista_Expr: lista_Expr ',' x .

    $default  reduce using rule 32 (lista_Expr)


State 131

   19 ins_if: IF '(' x ')' '{' . lSentencia '}'
   20       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   21       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 138
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 132

   18 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 139
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 133

   17 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 49

    $default  reduce using rule 36 (z)

    z  go to state 140


State 134

   45 declaracion_vector: VECTOR MENOR tipo MAYOR ID .
   46                   | VECTOR MENOR tipo MAYOR ID . '=' '[' lparam ']'

    '='  shift, and go to state 141

    $default  reduce using rule 45 (declaracion_vector)


State 135

   37 declaracion_void: tipo ID '(' ')' bloque .

    $default  reduce using rule 37 (declaracion_void)


State 136

   38 declaracion_void: tipo ID '(' lasig ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 142


State 137

   39 lasig: lasig ',' . declaracion_var

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 143
    tipo             go to state 74


State 138

    2 lSentencia: lSentencia . sentencia z
   19 ins_if: IF '(' x ')' '{' lSentencia . '}'
   20       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   21       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 144

    sentencia           go to state 48
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 139

    2 lSentencia: lSentencia . sentencia z
   18 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 145

    sentencia           go to state 48
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 140

   17 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 146
    INCREMENT  shift, and go to state 11

    aumento  go to state 147


State 141

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' . '[' lparam ']'

    '['  shift, and go to state 148


State 142

   38 declaracion_void: tipo ID '(' lasig ')' bloque .

    $default  reduce using rule 38 (declaracion_void)


State 143

   39 lasig: lasig ',' declaracion_var .

    $default  reduce using rule 39 (lasig)


State 144

   19 ins_if: IF '(' x ')' '{' lSentencia '}' .
   20       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   21       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 149

    $default  reduce using rule 19 (ins_if)


State 145

   18 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 18 (ciclo_while)


State 146

   28 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 35


State 147

   17 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 150


State 148

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' . lparam ']'

    NUMERO     shift, and go to state 52
    ID         shift, and go to state 53
    STRING     shift, and go to state 54
    FLOAT      shift, and go to state 55
    MENOS      shift, and go to state 56
    TRUE       shift, and go to state 57
    FALSE      shift, and go to state 58
    NOT        shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    '('        shift, and go to state 62

    lparam  go to state 151
    x       go to state 65
    cond    go to state 66
    expr    go to state 67


State 149

   20 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   21       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 8
    '{'  shift, and go to state 152

    ins_if  go to state 153


State 150

   17 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 154


State 151

   41 lparam: lparam . ',' x
   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam . ']'

    ']'  shift, and go to state 155
    ','  shift, and go to state 90


State 152

   20 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 156
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 153

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 21 (ins_if)


State 154

   17 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 157
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 155

   46 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']' .

    $default  reduce using rule 46 (declaracion_vector)


State 156

    2 lSentencia: lSentencia . sentencia z
   20 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 158

    sentencia           go to state 48
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 157

    2 lSentencia: lSentencia . sentencia z
   17 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 159

    sentencia           go to state 48
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    llamada             go to state 25
    aumento             go to state 26
    decremento          go to state 27
    imprimir            go to state 28
    bloque              go to state 29
    declaracion_void    go to state 30
    declaracion_var     go to state 31
    declaracion_vector  go to state 32
    asignacion_var      go to state 33
    tipo                go to state 34


State 158

   20 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 20 (ins_if)


State 159

   17 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 17 (ciclo_for)
