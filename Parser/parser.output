Terminals unused in grammar

    DIM
    AS
    THEN
    PRINT
    PRINTF
    INTERROGACION
    DOT
    LEFT_BRACKET
    RIGHT_BRACKET
    PUSH_FRONT
    DOT_PUSH_BACK
    STRUCT
    REMOVE
    MEDIAN
    IOTA
    MEAN
    SIZE
    ATOI
    GET
    '.'


State 14 conflicts: 3 shift/reduce
State 48 conflicts: 2 shift/reduce
State 60 conflicts: 1 shift/reduce
State 82 conflicts: 2 shift/reduce
State 86 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: s END

    1 s: lSentencia

    2 lSentencia: lSentencia sentencia z
    3           | sentencia z

    4 sentencia: declaracion_var
    5          | asignacion_var
    6          | imprimir
    7          | bloque
    8          | aumento
    9          | decremento
   10          | ciclo_for
   11          | ciclo_while
   12          | ins_if
   13          | escapa
   14          | retornovalor
   15          | declaracion_void
   16          | llamada
   17          | declaracion_vector

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

   19 ciclo_while: WHILE '(' x ')' '{' lSentencia '}'

   20 ins_if: IF '(' x ')' '{' lSentencia '}'
   21       | IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' ELSE ins_if

   23 escapa: BREAK
   24       | CONTINUE
   25       | RETORNO

   26 retornovalor: RETORNO x

   27 llamada: ID '(' lparam ')'
   28        | ID '(' ')'

   29 aumento: INCREMENT ID
   30        | ID INCREMENT

   31 decremento: DECREMENT ID
   32           | ID DECREMENT

   33 imprimir: IMPR '(' lista_Expr ')'

   34 lista_Expr: lista_Expr ',' x
   35           | x

   36 bloque: '{' lSentencia '}'

   37 z: ';'
   38  | %empty

   39 declaracion_void: tipo ID '(' ')' bloque
   40                 | tipo ID '(' lasig ')' bloque

   41 lasig: lasig ',' declaracion_var
   42      | declaracion_var

   43 lparam: lparam ',' x
   44       | x

   45 declaracion_var: tipo ID
   46                | tipo ID '=' x

   47 declaracion_vector: VECTOR MENOR tipo MAYOR ID
   48                   | VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']'

   49 asignacion_var: ID '=' x

   50 x: cond

   51 cond: cond OR cond
   52     | cond AND cond
   53     | NOT cond
   54     | '(' cond ')'
   55     | expr oprel expr
   56     | expr

   57 oprel: MAYOR
   58      | MENOR
   59      | IGUAL_IGUAL
   60      | MENOR_IGUAL
   61      | MAYOR_IGUAL
   62      | DIFERENTE

   63 expr: expr SUMA expr
   64     | expr MENOS expr
   65     | expr MULTIPLICACION expr
   66     | expr DIVISION expr
   67     | expr MOD expr
   68     | expr EXPONENCIAL expr
   69     | '(' expr ')'
   70     | INCREMENT ID
   71     | ID INCREMENT
   72     | DECREMENT ID
   73     | ID DECREMENT
   74     | MENOS expr
   75     | NUMERO
   76     | ID
   77     | STRING
   78     | FLOAT
   79     | TRUE
   80     | FALSE

   81 tipo: INT
   82     | STR
   83     | FLO
   84     | BOOL
   85     | VOID


Terminals, with rules where they appear

    END (0) 0
    '(' (40) 18 19 20 21 22 27 28 33 39 40 54 69
    ')' (41) 18 19 20 21 22 27 28 33 39 40 54 69
    ',' (44) 34 41 43
    '.' (46)
    ';' (59) 37
    '=' (61) 46 48 49
    '[' (91) 48
    ']' (93) 48
    '{' (123) 18 19 20 21 22 36
    '}' (125) 18 19 20 21 22 36
    error (256)
    NUMERO <std::string> (258) 75
    ID <std::string> (259) 27 28 29 30 31 32 39 40 45 46 47 48 49 70 71 72 73 76
    STRING <std::string> (260) 77
    INT <std::string> (261) 81
    STR <std::string> (262) 82
    FLOAT <std::string> (263) 78
    FLO <std::string> (264) 83
    BOOL <std::string> (265) 84
    SUMA (266) 63
    MENOS (267) 64 74
    DIM (268)
    AS (269)
    IMPR (270) 33
    MOD (271) 67
    VOID (272) 85
    TRUE (273) 79
    FALSE (274) 80
    AND (275) 52
    NOT (276) 53
    IF (277) 20 21 22
    THEN (278)
    ELSE (279) 21 22
    WHILE (280) 19
    PRINT (281)
    PRINTF (282)
    FOR (283) 18
    MULTIPLICACION (284) 65
    DIVISION (285) 66
    EXPONENCIAL (286) 68
    MENOR_IGUAL (287) 60
    MAYOR_IGUAL (288) 61
    IGUAL_IGUAL (289) 59
    DIFERENTE (290) 62
    MENOR (291) 47 48 58
    MAYOR (292) 47 48 57
    OR (293) 51
    INTERROGACION (294)
    INCREMENT (295) 29 30 70 71
    DECREMENT (296) 31 32 72 73
    DOT (297)
    LEFT_BRACKET (298)
    RIGHT_BRACKET (299)
    VECTOR (300) 47 48
    PUSH_FRONT (301)
    DOT_PUSH_BACK (302)
    STRUCT (303)
    REMOVE (304)
    MEDIAN (305)
    IOTA (306)
    MEAN (307)
    SIZE (308)
    ATOI (309)
    GET (310)
    RETORNO (311) 25 26
    BREAK (312) 23
    CONTINUE (313) 24
    NEG (314)


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    s <QVector<AbstractExpr*>*> (71)
        on left: 1
        on right: 0
    lSentencia <QVector<AbstractExpr*>*> (72)
        on left: 2 3
        on right: 1 2 18 19 20 21 22 36
    sentencia <AbstractExpr*> (73)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 2 3
    ciclo_for <AbstractExpr*> (74)
        on left: 18
        on right: 10
    ciclo_while <AbstractExpr*> (75)
        on left: 19
        on right: 11
    ins_if <AbstractExpr*> (76)
        on left: 20 21 22
        on right: 12 22
    escapa <AbstractExpr*> (77)
        on left: 23 24 25
        on right: 13
    retornovalor <AbstractExpr*> (78)
        on left: 26
        on right: 14
    llamada <AbstractExpr*> (79)
        on left: 27 28
        on right: 16
    aumento <AbstractExpr*> (80)
        on left: 29 30
        on right: 8 18
    decremento <AbstractExpr*> (81)
        on left: 31 32
        on right: 9
    imprimir <NT_Imprimir*> (82)
        on left: 33
        on right: 6
    lista_Expr <AbstractExpr*> (83)
        on left: 34 35
        on right: 33 34
    bloque <AbstractExpr*> (84)
        on left: 36
        on right: 7 39 40
    z (85)
        on left: 37 38
        on right: 2 3 18
    declaracion_void <AbstractExpr*> (86)
        on left: 39 40
        on right: 15
    lasig <QVector<AbstractExpr*>*> (87)
        on left: 41 42
        on right: 40 41
    lparam <QVector<AbstractExpr*>*> (88)
        on left: 43 44
        on right: 27 43 48
    declaracion_var <AbstractExpr*> (89)
        on left: 45 46
        on right: 4 18 41 42
    declaracion_vector <AbstractExpr*> (90)
        on left: 47 48
        on right: 17
    asignacion_var <AbstractExpr*> (91)
        on left: 49
        on right: 5
    x <AbstractExpr*> (92)
        on left: 50
        on right: 18 19 20 21 22 26 34 35 43 44 46 49
    cond <AbstractExpr*> (93)
        on left: 51 52 53 54 55 56
        on right: 50 51 52 53 54
    oprel <std::string> (94)
        on left: 57 58 59 60 61 62
        on right: 55
    expr <AbstractExpr*> (95)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 55 56 63 64 65 66 67 68 69 74
    tipo <AbstractExpr*> (96)
        on left: 81 82 83 84 85
        on right: 39 40 45 46 47 48


State 0

    0 $accept: . s END

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    s                   go to state 18
    lSentencia          go to state 19
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 1

   27 llamada: ID . '(' lparam ')'
   28        | ID . '(' ')'
   30 aumento: ID . INCREMENT
   32 decremento: ID . DECREMENT
   49 asignacion_var: ID . '=' x

    INCREMENT  shift, and go to state 36
    DECREMENT  shift, and go to state 37
    '('        shift, and go to state 38
    '='        shift, and go to state 39


State 2

   81 tipo: INT .

    $default  reduce using rule 81 (tipo)


State 3

   82 tipo: STR .

    $default  reduce using rule 82 (tipo)


State 4

   83 tipo: FLO .

    $default  reduce using rule 83 (tipo)


State 5

   84 tipo: BOOL .

    $default  reduce using rule 84 (tipo)


State 6

   33 imprimir: IMPR . '(' lista_Expr ')'

    '('  shift, and go to state 40


State 7

   85 tipo: VOID .

    $default  reduce using rule 85 (tipo)


State 8

   20 ins_if: IF . '(' x ')' '{' lSentencia '}'
   21       | IF . '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF . '(' x ')' '{' lSentencia '}' ELSE ins_if

    '('  shift, and go to state 41


State 9

   19 ciclo_while: WHILE . '(' x ')' '{' lSentencia '}'

    '('  shift, and go to state 42


State 10

   18 ciclo_for: FOR . '(' declaracion_var z x z aumento ')' '{' lSentencia '}'

    '('  shift, and go to state 43


State 11

   29 aumento: INCREMENT . ID

    ID  shift, and go to state 44


State 12

   31 decremento: DECREMENT . ID

    ID  shift, and go to state 45


State 13

   47 declaracion_vector: VECTOR . MENOR tipo MAYOR ID
   48                   | VECTOR . MENOR tipo MAYOR ID '=' '[' lparam ']'

    MENOR  shift, and go to state 46


State 14

   25 escapa: RETORNO .
   26 retornovalor: RETORNO . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    ID         [reduce using rule 25 (escapa)]
    INCREMENT  [reduce using rule 25 (escapa)]
    DECREMENT  [reduce using rule 25 (escapa)]
    $default   reduce using rule 25 (escapa)

    x     go to state 58
    cond  go to state 59
    expr  go to state 60


State 15

   23 escapa: BREAK .

    $default  reduce using rule 23 (escapa)


State 16

   24 escapa: CONTINUE .

    $default  reduce using rule 24 (escapa)


State 17

   36 bloque: '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 61
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 18

    0 $accept: s . END

    END  shift, and go to state 62


State 19

    1 s: lSentencia .
    2 lSentencia: lSentencia . sentencia z

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    $default  reduce using rule 1 (s)

    sentencia           go to state 63
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 20

    3 lSentencia: sentencia . z

    ';'  shift, and go to state 64

    $default  reduce using rule 38 (z)

    z  go to state 65


State 21

   10 sentencia: ciclo_for .

    $default  reduce using rule 10 (sentencia)


State 22

   11 sentencia: ciclo_while .

    $default  reduce using rule 11 (sentencia)


State 23

   12 sentencia: ins_if .

    $default  reduce using rule 12 (sentencia)


State 24

   13 sentencia: escapa .

    $default  reduce using rule 13 (sentencia)


State 25

   14 sentencia: retornovalor .

    $default  reduce using rule 14 (sentencia)


State 26

   16 sentencia: llamada .

    $default  reduce using rule 16 (sentencia)


State 27

    8 sentencia: aumento .

    $default  reduce using rule 8 (sentencia)


State 28

    9 sentencia: decremento .

    $default  reduce using rule 9 (sentencia)


State 29

    6 sentencia: imprimir .

    $default  reduce using rule 6 (sentencia)


State 30

    7 sentencia: bloque .

    $default  reduce using rule 7 (sentencia)


State 31

   15 sentencia: declaracion_void .

    $default  reduce using rule 15 (sentencia)


State 32

    4 sentencia: declaracion_var .

    $default  reduce using rule 4 (sentencia)


State 33

   17 sentencia: declaracion_vector .

    $default  reduce using rule 17 (sentencia)


State 34

    5 sentencia: asignacion_var .

    $default  reduce using rule 5 (sentencia)


State 35

   39 declaracion_void: tipo . ID '(' ')' bloque
   40                 | tipo . ID '(' lasig ')' bloque
   45 declaracion_var: tipo . ID
   46                | tipo . ID '=' x

    ID  shift, and go to state 66


State 36

   30 aumento: ID INCREMENT .

    $default  reduce using rule 30 (aumento)


State 37

   32 decremento: ID DECREMENT .

    $default  reduce using rule 32 (decremento)


State 38

   27 llamada: ID '(' . lparam ')'
   28        | ID '(' . ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57
    ')'        shift, and go to state 67

    lparam  go to state 68
    x       go to state 69
    cond    go to state 59
    expr    go to state 60


State 39

   49 asignacion_var: ID '=' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 70
    cond  go to state 59
    expr  go to state 60


State 40

   33 imprimir: IMPR '(' . lista_Expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    lista_Expr  go to state 71
    x           go to state 72
    cond        go to state 59
    expr        go to state 60


State 41

   20 ins_if: IF '(' . x ')' '{' lSentencia '}'
   21       | IF '(' . x ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' . x ')' '{' lSentencia '}' ELSE ins_if

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 73
    cond  go to state 59
    expr  go to state 60


State 42

   19 ciclo_while: WHILE '(' . x ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 74
    cond  go to state 59
    expr  go to state 60


State 43

   18 ciclo_for: FOR '(' . declaracion_var z x z aumento ')' '{' lSentencia '}'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 75
    tipo             go to state 76


State 44

   29 aumento: INCREMENT ID .

    $default  reduce using rule 29 (aumento)


State 45

   31 decremento: DECREMENT ID .

    $default  reduce using rule 31 (decremento)


State 46

   47 declaracion_vector: VECTOR MENOR . tipo MAYOR ID
   48                   | VECTOR MENOR . tipo MAYOR ID '=' '[' lparam ']'

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    tipo  go to state 77


State 47

   75 expr: NUMERO .

    $default  reduce using rule 75 (expr)


State 48

   71 expr: ID . INCREMENT
   73     | ID . DECREMENT
   76     | ID .

    INCREMENT  shift, and go to state 78
    DECREMENT  shift, and go to state 79

    INCREMENT  [reduce using rule 76 (expr)]
    DECREMENT  [reduce using rule 76 (expr)]
    $default   reduce using rule 76 (expr)


State 49

   77 expr: STRING .

    $default  reduce using rule 77 (expr)


State 50

   78 expr: FLOAT .

    $default  reduce using rule 78 (expr)


State 51

   74 expr: MENOS . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 81


State 52

   79 expr: TRUE .

    $default  reduce using rule 79 (expr)


State 53

   80 expr: FALSE .

    $default  reduce using rule 80 (expr)


State 54

   53 cond: NOT . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 82
    expr  go to state 60


State 55

   70 expr: INCREMENT . ID

    ID  shift, and go to state 83


State 56

   72 expr: DECREMENT . ID

    ID  shift, and go to state 84


State 57

   54 cond: '(' . cond ')'
   69 expr: '(' . expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 85
    expr  go to state 86


State 58

   26 retornovalor: RETORNO x .

    $default  reduce using rule 26 (retornovalor)


State 59

   50 x: cond .
   51 cond: cond . OR cond
   52     | cond . AND cond

    AND  shift, and go to state 87
    OR   shift, and go to state 88

    $default  reduce using rule 50 (x)


State 60

   55 cond: expr . oprel expr
   56     | expr .
   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 89
    MENOS           shift, and go to state 90
    MOD             shift, and go to state 91
    MULTIPLICACION  shift, and go to state 92
    DIVISION        shift, and go to state 93
    EXPONENCIAL     shift, and go to state 94
    MENOR_IGUAL     shift, and go to state 95
    MAYOR_IGUAL     shift, and go to state 96
    IGUAL_IGUAL     shift, and go to state 97
    DIFERENTE       shift, and go to state 98
    MENOR           shift, and go to state 99
    MAYOR           shift, and go to state 100

    MENOS     [reduce using rule 56 (cond)]
    $default  reduce using rule 56 (cond)

    oprel  go to state 101


State 61

    2 lSentencia: lSentencia . sentencia z
   36 bloque: '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 102

    sentencia           go to state 63
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 62

    0 $accept: s END .

    $default  accept


State 63

    2 lSentencia: lSentencia sentencia . z

    ';'  shift, and go to state 64

    $default  reduce using rule 38 (z)

    z  go to state 103


State 64

   37 z: ';' .

    $default  reduce using rule 37 (z)


State 65

    3 lSentencia: sentencia z .

    $default  reduce using rule 3 (lSentencia)


State 66

   39 declaracion_void: tipo ID . '(' ')' bloque
   40                 | tipo ID . '(' lasig ')' bloque
   45 declaracion_var: tipo ID .
   46                | tipo ID . '=' x

    '('  shift, and go to state 104
    '='  shift, and go to state 105

    $default  reduce using rule 45 (declaracion_var)


State 67

   28 llamada: ID '(' ')' .

    $default  reduce using rule 28 (llamada)


State 68

   27 llamada: ID '(' lparam . ')'
   43 lparam: lparam . ',' x

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 69

   44 lparam: x .

    $default  reduce using rule 44 (lparam)


State 70

   49 asignacion_var: ID '=' x .

    $default  reduce using rule 49 (asignacion_var)


State 71

   33 imprimir: IMPR '(' lista_Expr . ')'
   34 lista_Expr: lista_Expr . ',' x

    ')'  shift, and go to state 108
    ','  shift, and go to state 109


State 72

   35 lista_Expr: x .

    $default  reduce using rule 35 (lista_Expr)


State 73

   20 ins_if: IF '(' x . ')' '{' lSentencia '}'
   21       | IF '(' x . ')' '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x . ')' '{' lSentencia '}' ELSE ins_if

    ')'  shift, and go to state 110


State 74

   19 ciclo_while: WHILE '(' x . ')' '{' lSentencia '}'

    ')'  shift, and go to state 111


State 75

   18 ciclo_for: FOR '(' declaracion_var . z x z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 64

    $default  reduce using rule 38 (z)

    z  go to state 112


State 76

   45 declaracion_var: tipo . ID
   46                | tipo . ID '=' x

    ID  shift, and go to state 113


State 77

   47 declaracion_vector: VECTOR MENOR tipo . MAYOR ID
   48                   | VECTOR MENOR tipo . MAYOR ID '=' '[' lparam ']'

    MAYOR  shift, and go to state 114


State 78

   71 expr: ID INCREMENT .

    $default  reduce using rule 71 (expr)


State 79

   73 expr: ID DECREMENT .

    $default  reduce using rule 73 (expr)


State 80

   69 expr: '(' . expr ')'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 115


State 81

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   74     | MENOS expr .

    EXPONENCIAL  shift, and go to state 94

    $default  reduce using rule 74 (expr)


State 82

   51 cond: cond . OR cond
   52     | cond . AND cond
   53     | NOT cond .

    AND  shift, and go to state 87
    OR   shift, and go to state 88

    AND       [reduce using rule 53 (cond)]
    OR        [reduce using rule 53 (cond)]
    $default  reduce using rule 53 (cond)


State 83

   70 expr: INCREMENT ID .

    $default  reduce using rule 70 (expr)


State 84

   72 expr: DECREMENT ID .

    $default  reduce using rule 72 (expr)


State 85

   51 cond: cond . OR cond
   52     | cond . AND cond
   54     | '(' cond . ')'

    AND  shift, and go to state 87
    OR   shift, and go to state 88
    ')'  shift, and go to state 116


State 86

   55 cond: expr . oprel expr
   56     | expr .
   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   69     | '(' expr . ')'

    SUMA            shift, and go to state 89
    MENOS           shift, and go to state 90
    MOD             shift, and go to state 91
    MULTIPLICACION  shift, and go to state 92
    DIVISION        shift, and go to state 93
    EXPONENCIAL     shift, and go to state 94
    MENOR_IGUAL     shift, and go to state 95
    MAYOR_IGUAL     shift, and go to state 96
    IGUAL_IGUAL     shift, and go to state 97
    DIFERENTE       shift, and go to state 98
    MENOR           shift, and go to state 99
    MAYOR           shift, and go to state 100
    ')'             shift, and go to state 117

    ')'       [reduce using rule 56 (cond)]
    $default  reduce using rule 56 (cond)

    oprel  go to state 101


State 87

   52 cond: cond AND . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 118
    expr  go to state 60


State 88

   51 cond: cond OR . cond

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    cond  go to state 119
    expr  go to state 60


State 89

   63 expr: expr SUMA . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 120


State 90

   64 expr: expr MENOS . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 121


State 91

   67 expr: expr MOD . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 122


State 92

   65 expr: expr MULTIPLICACION . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 123


State 93

   66 expr: expr DIVISION . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 124


State 94

   68 expr: expr EXPONENCIAL . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 125


State 95

   60 oprel: MENOR_IGUAL .

    $default  reduce using rule 60 (oprel)


State 96

   61 oprel: MAYOR_IGUAL .

    $default  reduce using rule 61 (oprel)


State 97

   59 oprel: IGUAL_IGUAL .

    $default  reduce using rule 59 (oprel)


State 98

   62 oprel: DIFERENTE .

    $default  reduce using rule 62 (oprel)


State 99

   58 oprel: MENOR .

    $default  reduce using rule 58 (oprel)


State 100

   57 oprel: MAYOR .

    $default  reduce using rule 57 (oprel)


State 101

   55 cond: expr oprel . expr

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 80

    expr  go to state 126


State 102

   36 bloque: '{' lSentencia '}' .

    $default  reduce using rule 36 (bloque)


State 103

    2 lSentencia: lSentencia sentencia z .

    $default  reduce using rule 2 (lSentencia)


State 104

   39 declaracion_void: tipo ID '(' . ')' bloque
   40                 | tipo ID '(' . lasig ')' bloque

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7
    ')'   shift, and go to state 127

    lasig            go to state 128
    declaracion_var  go to state 129
    tipo             go to state 76


State 105

   46 declaracion_var: tipo ID '=' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 130
    cond  go to state 59
    expr  go to state 60


State 106

   27 llamada: ID '(' lparam ')' .

    $default  reduce using rule 27 (llamada)


State 107

   43 lparam: lparam ',' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 131
    cond  go to state 59
    expr  go to state 60


State 108

   33 imprimir: IMPR '(' lista_Expr ')' .

    $default  reduce using rule 33 (imprimir)


State 109

   34 lista_Expr: lista_Expr ',' . x

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 132
    cond  go to state 59
    expr  go to state 60


State 110

   20 ins_if: IF '(' x ')' . '{' lSentencia '}'
   21       | IF '(' x ')' . '{' lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' . '{' lSentencia '}' ELSE ins_if

    '{'  shift, and go to state 133


State 111

   19 ciclo_while: WHILE '(' x ')' . '{' lSentencia '}'

    '{'  shift, and go to state 134


State 112

   18 ciclo_for: FOR '(' declaracion_var z . x z aumento ')' '{' lSentencia '}'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    x     go to state 135
    cond  go to state 59
    expr  go to state 60


State 113

   45 declaracion_var: tipo ID .
   46                | tipo ID . '=' x

    '='  shift, and go to state 105

    $default  reduce using rule 45 (declaracion_var)


State 114

   47 declaracion_vector: VECTOR MENOR tipo MAYOR . ID
   48                   | VECTOR MENOR tipo MAYOR . ID '=' '[' lparam ']'

    ID  shift, and go to state 136


State 115

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   69     | '(' expr . ')'

    SUMA            shift, and go to state 89
    MENOS           shift, and go to state 90
    MOD             shift, and go to state 91
    MULTIPLICACION  shift, and go to state 92
    DIVISION        shift, and go to state 93
    EXPONENCIAL     shift, and go to state 94
    ')'             shift, and go to state 117


State 116

   54 cond: '(' cond ')' .

    $default  reduce using rule 54 (cond)


State 117

   69 expr: '(' expr ')' .

    $default  reduce using rule 69 (expr)


State 118

   51 cond: cond . OR cond
   52     | cond . AND cond
   52     | cond AND cond .

    $default  reduce using rule 52 (cond)


State 119

   51 cond: cond . OR cond
   51     | cond OR cond .
   52     | cond . AND cond

    AND  shift, and go to state 87

    $default  reduce using rule 51 (cond)


State 120

   63 expr: expr . SUMA expr
   63     | expr SUMA expr .
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 91
    MULTIPLICACION  shift, and go to state 92
    DIVISION        shift, and go to state 93
    EXPONENCIAL     shift, and go to state 94

    $default  reduce using rule 63 (expr)


State 121

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   64     | expr MENOS expr .
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    MOD             shift, and go to state 91
    MULTIPLICACION  shift, and go to state 92
    DIVISION        shift, and go to state 93
    EXPONENCIAL     shift, and go to state 94

    $default  reduce using rule 64 (expr)


State 122

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   67     | expr MOD expr .
   68     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 94

    $default  reduce using rule 67 (expr)


State 123

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   65     | expr MULTIPLICACION expr .
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 94

    $default  reduce using rule 65 (expr)


State 124

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   66     | expr DIVISION expr .
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    EXPONENCIAL  shift, and go to state 94

    $default  reduce using rule 66 (expr)


State 125

   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr
   68     | expr EXPONENCIAL expr .

    EXPONENCIAL  shift, and go to state 94

    $default  reduce using rule 68 (expr)


State 126

   55 cond: expr oprel expr .
   63 expr: expr . SUMA expr
   64     | expr . MENOS expr
   65     | expr . MULTIPLICACION expr
   66     | expr . DIVISION expr
   67     | expr . MOD expr
   68     | expr . EXPONENCIAL expr

    SUMA            shift, and go to state 89
    MENOS           shift, and go to state 90
    MOD             shift, and go to state 91
    MULTIPLICACION  shift, and go to state 92
    DIVISION        shift, and go to state 93
    EXPONENCIAL     shift, and go to state 94

    MENOS     [reduce using rule 55 (cond)]
    $default  reduce using rule 55 (cond)


State 127

   39 declaracion_void: tipo ID '(' ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 137


State 128

   40 declaracion_void: tipo ID '(' lasig . ')' bloque
   41 lasig: lasig . ',' declaracion_var

    ')'  shift, and go to state 138
    ','  shift, and go to state 139


State 129

   42 lasig: declaracion_var .

    $default  reduce using rule 42 (lasig)


State 130

   46 declaracion_var: tipo ID '=' x .

    $default  reduce using rule 46 (declaracion_var)


State 131

   43 lparam: lparam ',' x .

    $default  reduce using rule 43 (lparam)


State 132

   34 lista_Expr: lista_Expr ',' x .

    $default  reduce using rule 34 (lista_Expr)


State 133

   20 ins_if: IF '(' x ')' '{' . lSentencia '}'
   21       | IF '(' x ')' '{' . lSentencia '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' . lSentencia '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 140
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 134

   19 ciclo_while: WHILE '(' x ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 141
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 135

   18 ciclo_for: FOR '(' declaracion_var z x . z aumento ')' '{' lSentencia '}'

    ';'  shift, and go to state 64

    $default  reduce using rule 38 (z)

    z  go to state 142


State 136

   47 declaracion_vector: VECTOR MENOR tipo MAYOR ID .
   48                   | VECTOR MENOR tipo MAYOR ID . '=' '[' lparam ']'

    '='  shift, and go to state 143

    $default  reduce using rule 47 (declaracion_vector)


State 137

   39 declaracion_void: tipo ID '(' ')' bloque .

    $default  reduce using rule 39 (declaracion_void)


State 138

   40 declaracion_void: tipo ID '(' lasig ')' . bloque

    '{'  shift, and go to state 17

    bloque  go to state 144


State 139

   41 lasig: lasig ',' . declaracion_var

    INT   shift, and go to state 2
    STR   shift, and go to state 3
    FLO   shift, and go to state 4
    BOOL  shift, and go to state 5
    VOID  shift, and go to state 7

    declaracion_var  go to state 145
    tipo             go to state 76


State 140

    2 lSentencia: lSentencia . sentencia z
   20 ins_if: IF '(' x ')' '{' lSentencia . '}'
   21       | IF '(' x ')' '{' lSentencia . '}' ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia . '}' ELSE ins_if

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 146

    sentencia           go to state 63
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 141

    2 lSentencia: lSentencia . sentencia z
   19 ciclo_while: WHILE '(' x ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 147

    sentencia           go to state 63
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 142

   18 ciclo_for: FOR '(' declaracion_var z x z . aumento ')' '{' lSentencia '}'

    ID         shift, and go to state 148
    INCREMENT  shift, and go to state 11

    aumento  go to state 149


State 143

   48 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' . '[' lparam ']'

    '['  shift, and go to state 150


State 144

   40 declaracion_void: tipo ID '(' lasig ')' bloque .

    $default  reduce using rule 40 (declaracion_void)


State 145

   41 lasig: lasig ',' declaracion_var .

    $default  reduce using rule 41 (lasig)


State 146

   20 ins_if: IF '(' x ')' '{' lSentencia '}' .
   21       | IF '(' x ')' '{' lSentencia '}' . ELSE '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' . ELSE ins_if

    ELSE  shift, and go to state 151

    $default  reduce using rule 20 (ins_if)


State 147

   19 ciclo_while: WHILE '(' x ')' '{' lSentencia '}' .

    $default  reduce using rule 19 (ciclo_while)


State 148

   30 aumento: ID . INCREMENT

    INCREMENT  shift, and go to state 36


State 149

   18 ciclo_for: FOR '(' declaracion_var z x z aumento . ')' '{' lSentencia '}'

    ')'  shift, and go to state 152


State 150

   48 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' . lparam ']'

    NUMERO     shift, and go to state 47
    ID         shift, and go to state 48
    STRING     shift, and go to state 49
    FLOAT      shift, and go to state 50
    MENOS      shift, and go to state 51
    TRUE       shift, and go to state 52
    FALSE      shift, and go to state 53
    NOT        shift, and go to state 54
    INCREMENT  shift, and go to state 55
    DECREMENT  shift, and go to state 56
    '('        shift, and go to state 57

    lparam  go to state 153
    x       go to state 69
    cond    go to state 59
    expr    go to state 60


State 151

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE . '{' lSentencia '}'
   22       | IF '(' x ')' '{' lSentencia '}' ELSE . ins_if

    IF   shift, and go to state 8
    '{'  shift, and go to state 154

    ins_if  go to state 155


State 152

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' . '{' lSentencia '}'

    '{'  shift, and go to state 156


State 153

   43 lparam: lparam . ',' x
   48 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam . ']'

    ']'  shift, and go to state 157
    ','  shift, and go to state 107


State 154

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 158
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 155

   22 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE ins_if .

    $default  reduce using rule 22 (ins_if)


State 156

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' . lSentencia '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17

    lSentencia          go to state 159
    sentencia           go to state 20
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 157

   48 declaracion_vector: VECTOR MENOR tipo MAYOR ID '=' '[' lparam ']' .

    $default  reduce using rule 48 (declaracion_vector)


State 158

    2 lSentencia: lSentencia . sentencia z
   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 160

    sentencia           go to state 63
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 159

    2 lSentencia: lSentencia . sentencia z
   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia . '}'

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    STR        shift, and go to state 3
    FLO        shift, and go to state 4
    BOOL       shift, and go to state 5
    IMPR       shift, and go to state 6
    VOID       shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    FOR        shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    VECTOR     shift, and go to state 13
    RETORNO    shift, and go to state 14
    BREAK      shift, and go to state 15
    CONTINUE   shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 161

    sentencia           go to state 63
    ciclo_for           go to state 21
    ciclo_while         go to state 22
    ins_if              go to state 23
    escapa              go to state 24
    retornovalor        go to state 25
    llamada             go to state 26
    aumento             go to state 27
    decremento          go to state 28
    imprimir            go to state 29
    bloque              go to state 30
    declaracion_void    go to state 31
    declaracion_var     go to state 32
    declaracion_vector  go to state 33
    asignacion_var      go to state 34
    tipo                go to state 35


State 160

   21 ins_if: IF '(' x ')' '{' lSentencia '}' ELSE '{' lSentencia '}' .

    $default  reduce using rule 21 (ins_if)


State 161

   18 ciclo_for: FOR '(' declaracion_var z x z aumento ')' '{' lSentencia '}' .

    $default  reduce using rule 18 (ciclo_for)
